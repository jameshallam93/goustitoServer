{"version":3,"sources":["constants.ts","redux/reducers/recipeReducer.ts","redux/reducers/userReducer.ts","services/generateApiRequest.ts","utils/harvestRecipeData/harvestRecipeData.ts","services/recipes.ts","redux/sagas/recipeSagas.ts","services/login.ts","redux/sagas/loginSagas.ts","utils/getCurrentTime/getCurrentTime.ts","redux/sagas/sagas.ts","redux/store.ts","components/pageElements/notification/Notification.tsx","redux/actions/recipeActions.ts","redux/actions/loginActions.ts","redux/actions/actions.ts","components/home/pageNavigation/changePage.ts","components/globals/button/Button.tsx","components/home/pageNavigation/PageNavigation.tsx","components/home/recipeList/InfoBar.tsx","hooks/useTogglable.ts","components/home/recipeList/IngredientList.tsx","components/home/recipeList/recipe/SaveButton.tsx","hooks/useNotification.ts","components/home/recipeList/recipe/Recipe.tsx","redux/actions/saveAndDeleteActions.ts","components/home/recipeList/RecipeList.tsx","hooks/useField.ts","components/globals/checkbox/Checkbox.tsx","components/globals/checkbox/CheckboxArray.tsx","components/globals/button/InputButton.tsx","components/home/searchBar/SearchForm.tsx","components/home/searchBar/SearchInfo.tsx","components/home/searchBar/SearchBar.tsx","assets/loading-icon.gif","components/pageElements/loading/Loading.tsx","components/home/Home.tsx","components/login/UserDetailsForm/validators/validators.ts","components/login/UserDetailsForm/DetailsValidator.tsx","components/login/UserDetailsForm/UserDetailsForm.tsx","utils/auth/generateCredentials.ts","components/login/LoginForm.tsx","services/signUp.ts","components/login/SignupForm.tsx","components/login/LoginPage.tsx","components/pageElements/header/Navbar.tsx","components/pageElements/header/Header.tsx","components/vault/UserVault.tsx","App.tsx","index.tsx"],"names":["MEAL_TYPES","RESULTS_PER_PAGE","initialState","recipes","resultsShown","from","to","isLoading","user","username","loginError","error","apiVariables","process","generateApiRequest","searchTerms","mealTypes","searchTermsString","split","length","join","generateSearchTermString","mealTypeString","forEach","type","generateMealTypeString","requestString","harvesters","data","hits","map","recipe","harvestedRecipe","id","uri","label","url","img","image","calories","source","ingredients","ingredientLines","servings","yield","push","baseUrl","recipeService","request","axios","get","response","filteredResponse","currentUser","token","localStorage","getItem","headers","post","recipeId","authorization","fetchRecipes","saveRecipe","deleteRecipe","action","call","payload","put","loginService","credentials","expiry","setItem","e","attempt_Login","validateSession","userData","console","log","currentTime","Number","Date","getTime","sessionExpiry","removeItem","window","alert","loggedUser","sessionWatcher","recipeWatcher","saveOrRemoveRecipeWatcher","loginWatcher","rootSaga","takeLatest","all","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","state","users","newRecipes","filter","store","createStore","composeWithDevTools","applyMiddleware","run","MessageType","GET_RECIPES","ATTEMPT_LOGIN","NAVIGATION_ACTIONS","changePage","direction","dispatch","scrollTo","top","behavior","Button","onClick","hideOrShow","className","PageNavigation","useDispatch","startOfList","useSelector","endOfList","recipesAreLoaded","InfoBar","useTogglable","useState","setState","toggle","useCallback","IngredientList","ingredient","SaveButton","isSaved","Notification","notification","message","useNotification","value","setValue","setTimeout","Recipe","savedRecipes","isHidden","setIsHidden","recipeIsSaved","toggleIsSaved","setNotification","useEffect","event","stopPropagation","DELETE_USER_RECIPE","SAVE_USER_RECIPE","Math","floor","src","alt","href","RecipeList","currentRecipes","setCurrentRecipes","allRecipes","resultsToShow","recipesToShow","slice","useField","onChange","target","Checkbox","handleCheckboxChange","isChecked","setIsChecked","checked","CheckboxArray","categories","category","InputButton","SearchForm","checkedMealTypes","setCheckedMealTypes","handleSearch","a","preventDefault","onSubmit","placeholder","includes","newCheckedMealTypes","SearchInfo","SearchBar","Loading","loadingIcon","Home","validators","numberRegex","specialRegex","usernameIsValid","passwordIsValid","password","this","passwordLength","passwordContainsUpper","passwordContainsNumber","passwordContainsSpecial","test","characters","upperIsPresent","character","toUpperCase","DetailsValidator","setValidDetails","UserDetailsForm","heading","handleSubmit","requireValidation","validDetails","generateCredentials","LoginForm","handleLogin","signUpService","SignupForm","hidden","handleSignup","LoginPage","changeHidden","Navbar","Header","UserVault","history","useHistory","App","VALIDATE_SESSION_DETAILS","exact","path","require","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.caf0fd8b.chunk.js","sourcesContent":["export const MEAL_TYPES = [\"Breakfast\", \"Lunch\", \"Dinner\", \"Snack\"];\r\nexport const RESULTS_PER_PAGE = 10;","import { Actions } from \"./../actions/actions\";\r\nimport { RESULTS_PER_PAGE } from \"../../constants\";\r\nimport { RecipeType } from \"../../services/recipes\";\r\n\r\nexport type RecipeState = {\r\n\trecipes: RecipeType[];\r\n\tresultsShown: {\r\n\t\tfrom: number,\r\n\t\tto: number\r\n\t},\r\n\tisLoading: boolean\r\n}\r\n\r\nexport const initialState = {\r\n\trecipes: [],\r\n\tresultsShown: {\r\n\t\tfrom: 0,\r\n\t\tto: RESULTS_PER_PAGE\r\n\t},\r\n\tisLoading: false\r\n};\r\n\r\nconst recipeReducer = (state: RecipeState = initialState, action: Actions) => { //eslint-disable-line\r\n\tswitch (action.type) {\r\n\tcase \"GET_RECIPES\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tisLoading: true\r\n\t\t};\r\n\tcase \"SET_RECIPES\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\trecipes: [action.payload],\r\n\t\t\tresultsShown: {\r\n\t\t\t\tfrom: 0,\r\n\t\t\t\tto: RESULTS_PER_PAGE\r\n\t\t\t},\r\n\t\t\tisLoading: false\r\n\t\t};\r\n\tcase \"ADD_RECIPES\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\trecipes: [\r\n\t\t\t\t...state.recipes,\r\n\t\t\t\taction.payload.recipes\r\n\t\t\t]\r\n\t\t};\r\n\tcase \"SHOW_NEXT_PAGE\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tresultsShown: {\r\n\t\t\t\tfrom: state.resultsShown.from + RESULTS_PER_PAGE,\r\n\t\t\t\tto: state.resultsShown.to + RESULTS_PER_PAGE\r\n\t\t\t}\r\n\t\t};\r\n\tcase \"SHOW_PREVIOUS_PAGE\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tresultsShown: {\r\n\t\t\t\tfrom: state.resultsShown.from - RESULTS_PER_PAGE,\r\n\t\t\t\tto: state.resultsShown.to - RESULTS_PER_PAGE\r\n\t\t\t}\r\n\t\t};\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport { recipeReducer };","import { RecipeType } from \"../../services/recipes\";\r\n\r\nexport type UserState = {\r\n\tuser: {\r\n\t\tusername: string | null\r\n\t},\r\n\trecipes: RecipeType[],\r\n\tloginError: { error: string | null }\r\n}\r\n\r\nexport const initialState: UserState = {\r\n\tuser: {\r\n\t\tusername: null\r\n\t},\r\n\trecipes: [],\r\n\tloginError: {\r\n\t\terror: null\r\n\t}\r\n};\r\n\r\nexport const userReducer = (state: UserState = initialState, action: any): UserState => {//eslint-disable-line\r\n\tswitch (action.type) {\r\n\tcase \"SET_USER_DETAILS\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser: {\r\n\t\t\t\tusername: action.payload.username\r\n\t\t\t}\r\n\t\t};\r\n\tcase \"CLEAR_USER_DETAILS\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser: {\r\n\t\t\t\tusername: null\r\n\t\t\t}\r\n\t\t};\r\n\tcase \"INIT_USER_RECIPES\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\trecipes: [\r\n\t\t\t\t...action.payload.recipes\r\n\t\t\t]\r\n\t\t};\r\n\r\n\tcase \"CLEAR_USER_RECIPES\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\trecipes: []\r\n\t\t};\r\n\tcase \"SAVE_RECIPE\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\trecipes: [\r\n\t\t\t\t...state.recipes,\r\n\t\t\t\taction.payload.recipe\r\n\t\t\t]\r\n\t\t};\r\n\tcase \"DELETE_RECIPE\":\r\n\t\t\tconst newRecipes = state.recipes.filter(recipe => recipe.id !== action.payload.recipeId); //eslint-disable-line\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\trecipes: [\r\n\t\t\t\t...newRecipes\r\n\t\t\t]\r\n\t\t};\r\n\tcase \"LOGIN_ERROR\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tloginError: action.payload.error\r\n\t\t};\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n};","const baseUrl = \"https://api.edamam.com/search\";\r\nconst apiVariables = `&app_id=${process.env.REACT_APP_API_ID}&app_key=${process.env.REACT_APP_EDAMAM_API_KEY}&from=0&to=99`;\r\n\r\nconst generateMealTypeString = (mealTypes: string[]): string => {\r\n\r\n\tif (mealTypes.length === 0) {\r\n\t\treturn \"\";\r\n\t}\r\n\tlet mealTypeString = \"\";\r\n\r\n\tmealTypes.forEach(type => {\r\n\t\tmealTypeString = `${mealTypeString}${type}+`;\r\n\t});\r\n\treturn mealTypeString;\r\n};\r\n\r\nconst generateSearchTermString = (searchTerms: string) => {\r\n\tconst split = searchTerms.split(\" \");\r\n\tif (split.length === 1) {\r\n\t\treturn split[0];\r\n\t}\r\n\treturn split.join(\"%20\");\r\n};\r\n\r\nexport const generateApiRequest = (searchTerms: string, mealTypes: string[]): string => {\r\n\tconst searchTermsString = generateSearchTermString(searchTerms);\r\n\tconst mealTypeString = generateMealTypeString(mealTypes);\r\n\r\n\tlet requestString = \"\";\r\n\r\n\trequestString = `${baseUrl}?q=${searchTermsString}${apiVariables}`;\r\n\r\n\tif (mealTypeString) {\r\n\t\trequestString = `${requestString}&mealType=${mealTypeString}`;\r\n\t}\r\n\treturn requestString;\r\n};","import { RecipeType } from \"../../services/recipes\";\r\n\r\nexport const harvesters = {\r\n\tharvestRecipeData(data: any): RecipeType[] {//eslint-disable-line\r\n\t\tconst recipes: RecipeType[] = [];\r\n\r\n\t\tdata.hits.map((recipe: any) => {//eslint-disable-line\r\n\t\t\tconst harvestedRecipe: RecipeType = {\r\n\t\t\t\tid: recipe.recipe.uri,\r\n\t\t\t\tlabel: recipe.recipe.label,\r\n\t\t\t\turl: recipe.recipe.url,\r\n\t\t\t\timg: recipe.recipe.image,\r\n\t\t\t\tcalories: recipe.recipe.calories,\r\n\t\t\t\tsource: recipe.recipe.source,\r\n\t\t\t\tingredients: recipe.recipe.ingredientLines,\r\n\t\t\t\tservings: recipe.recipe.yield\r\n\t\t\t};\r\n\t\t\trecipes.push(harvestedRecipe);\r\n\t\t});\r\n\t\treturn recipes;\r\n\t}\r\n};\r\n\r\n","import axios, { AxiosResponse } from \"axios\";\r\n\r\nimport { generateApiRequest } from \"./generateApiRequest\";\r\nimport { harvesters } from \"../utils/harvestRecipeData/harvestRecipeData\";\r\n\r\nconst baseUrl = \"http://localhost:3001\";\r\n\r\nexport type RecipeType = {\r\n\tid: string,\r\n\tlabel: string,\r\n\turl: string,\r\n\timg: string,\r\n\tcalories: number,\r\n\tsource: string,\r\n\tingredients: string[],\r\n\tservings: number\r\n}\r\n\r\nexport type UserValidation = {\r\n\tusername: string | null,\r\n\ttoken: string | null\r\n}\r\n\r\nconst recipeService = {\r\n\r\n\tasync searchByName(searchTerms: string, mealTypes: string[]): Promise<RecipeType[]> {\r\n\t\tconst request = generateApiRequest(searchTerms, mealTypes);\r\n\t\tconst response = await axios.get(request);\r\n\t\tconst filteredResponse = harvesters.harvestRecipeData(response.data);\r\n\t\treturn filteredResponse;\r\n\t},\r\n\r\n\tasync fetchUserRecipes(currentUser: string): Promise<string[]> {\r\n\t\tconst request = `${baseUrl}/api/recipe/userRecipes/${currentUser}`;\r\n\t\tconst token = localStorage.getItem(\"token\");\r\n\r\n\t\tconst response = await axios.get(request, {\r\n\t\t\theaders: {\r\n\t\t\t\t\"authorization\": `Bearer ${token}`\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn response.data;\r\n\t},\r\n\r\n\tasync saveToVault(recipe: RecipeType, currentUser: string): Promise<AxiosResponse> {\r\n\t\tconst request = `${baseUrl}/api/recipe/saveById`;\r\n\t\tconst token = localStorage.getItem(\"token\");\r\n\r\n\t\tconst response = await axios.post(\r\n\t\t\trequest,\r\n\t\t\t{ recipe, currentUser },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"authorization\": `Bearer ${token}`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn response.data;\r\n\t},\r\n\r\n\tasync deleteFromVault(recipeId: string, currentUser: string): Promise<AxiosResponse> {\r\n\t\tconst request = `${baseUrl}/api/recipe/deleteById`;\r\n\t\tconst token = localStorage.getItem(\"token\");\r\n\r\n\t\tconst response = await axios.post(\r\n\t\t\trequest,\r\n\t\t\t{ recipeId, currentUser },\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tauthorization: `Bearer ${token}`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn response.data;\r\n\t}\r\n};\r\n\r\nexport { recipeService };","import { put, call } from \"redux-saga/effects\";\r\nimport { recipeService } from \"../../services/recipes\";\r\n/*eslint-disable*/\r\nimport { ActionWithSavedRecipeIdPayload, ActionWithSearchPayload, ActionWithSavedRecipePayload } from \"../actions/actions\";\r\n\r\nexport function* fetchRecipes(action: ActionWithSearchPayload): Generator<\r\n    any,\r\n    void,\r\n    void\r\n> {\r\n    const recipes: any = yield call(\r\n        recipeService.searchByName,\r\n        action.payload.searchTerms,\r\n        action.payload.mealTypes\r\n    );\r\n    yield put({\r\n        type: \"SET_RECIPES\",\r\n        payload: recipes\r\n    });\r\n}\r\n\r\nexport function* saveRecipe(action: ActionWithSavedRecipePayload): Generator<\r\n    any,\r\n    void,\r\n    void\r\n> {\r\n    yield call(\r\n        recipeService.saveToVault,\r\n        action.payload.recipe,\r\n        action.payload.currentUser\r\n    );\r\n    yield put({\r\n        type: \"SAVE_RECIPE\",\r\n        payload: { recipe: action.payload.recipe }\r\n    })\r\n}\r\n\r\nexport function* deleteRecipe(action: ActionWithSavedRecipeIdPayload): Generator<\r\n    any,\r\n    void,\r\n    void\r\n> {\r\n    yield call(\r\n        recipeService.deleteFromVault,\r\n        action.payload.recipeId,\r\n        action.payload.currentUser\r\n    );\r\n    yield put({\r\n        type: \"DELETE_RECIPE\",\r\n        payload: { recipeId: action.payload.recipeId }\r\n    })\r\n}","import axios, { AxiosResponse } from \"axios\";\r\nconst baseUrl = \"http://localhost:3001\";\r\n\r\nexport type Credentials = {\r\n\tusername: string,\r\n\tpassword: string\r\n}\r\n\r\nexport const loginService = {\r\n\tasync attemptLogin(credentials: Credentials): Promise<AxiosResponse> {\r\n\t\ttry {\r\n\t\t\tconst request = `${baseUrl}/api/login`;\r\n\t\t\tconst response = await axios.post(request, credentials);\r\n\t\t\t//todo - refactor below\r\n\t\t\tconst token = response.data.token;\r\n\t\t\tconst expiry = response.data.expiry;\r\n\t\t\tconst username = response.data.username;\r\n\t\t\tlocalStorage.setItem(\"token\", token);\r\n\t\t\tlocalStorage.setItem(\"token-expiry\", expiry);\r\n\t\t\tlocalStorage.setItem(\"username\", username);\r\n\t\t\tdelete response.data.token;\r\n\t\t\treturn response.data;\r\n\t\t} catch (e) {\r\n\t\t\tthrow { e };\r\n\t\t}\r\n\t}\r\n};","import { put, call } from \"redux-saga/effects\";\r\nimport { loginService } from \"../../services/login\";\r\nimport { recipeService } from \"../../services/recipes\";\r\nimport { getCurrentTime } from \"../../utils/getCurrentTime/getCurrentTime\";\r\n/* eslint-disable */\r\n\r\nexport function* attempt_Login(action: any): Generator<any, void, void> {\r\n    try {\r\n        const userData: any = yield call(\r\n            loginService.attemptLogin,\r\n            action.payload.credentials\r\n        );\r\n        yield put({\r\n            type: \"SET_USER_DETAILS\",\r\n            payload: {\r\n                username: action.payload.credentials.username\r\n            }\r\n        })\r\n        yield put({\r\n            type: \"INIT_USER_RECIPES\",\r\n            payload: {\r\n                recipes: userData.recipes\r\n            }\r\n        })\r\n    } catch (e) {\r\n        console.log(e);\r\n        yield put({\r\n            type: \"LOGIN_ERROR\",\r\n            payload: { error: e.e.response.data }\r\n        })\r\n    }\r\n}\r\n\r\nexport function* validateSession(action: any): Generator<any, void, void> {\r\n    const currentTime = getCurrentTime();\r\n    if (action.payload.sessionExpiry) {\r\n        if (currentTime > action.payload.sessionExpiry) {\r\n            {\r\n                localStorage.removeItem(\"token\");\r\n                localStorage.removeItem(\"username\");\r\n                yield put({ type: \"CLEAR_USER_DETAILS\" })\r\n                window.alert(\"Session has expired - please login again\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (action.payload.loggedUser) {\r\n        yield put({\r\n            type: \"SET_USER_DETAILS\",\r\n            payload: { username: action.payload.loggedUser }\r\n        })\r\n        const recipes = yield call(\r\n            recipeService.fetchUserRecipes,\r\n            action.payload.loggedUser\r\n        );\r\n        yield put({\r\n            type: \"INIT_USER_RECIPES\",\r\n            payload: { recipes: recipes }\r\n        });\r\n    }\r\n}","export const getCurrentTime = (): number => {\r\n\treturn Number(new Date().getTime());\r\n};\r\n","/*eslint-disable */\r\n\r\nimport { takeLatest, all } from \"redux-saga/effects\";\r\n\r\nimport { fetchRecipes, saveRecipe, deleteRecipe } from \"./recipeSagas\";\r\nimport { attempt_Login, validateSession } from \"./loginSagas\";\r\n\r\nfunction* sessionWatcher() {\r\n\tyield takeLatest(\"VALIDATE_SESSION_DETAILS\", validateSession)\r\n}\r\n\r\nfunction* recipeWatcher() {\r\n\tyield takeLatest(\"GET_RECIPES\", fetchRecipes);\r\n}\r\n\r\nfunction* saveOrRemoveRecipeWatcher() {\r\n\tyield takeLatest(\"SAVE_USER_RECIPE\", saveRecipe)\r\n\tyield takeLatest(\"DELETE_USER_RECIPE\", deleteRecipe)\r\n}\r\n\r\nfunction* loginWatcher() {\r\n\tyield takeLatest(\"ATTEMPT_LOGIN\", attempt_Login)\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([\r\n\t\trecipeWatcher(),\r\n\t\tsaveOrRemoveRecipeWatcher(),\r\n\t\tloginWatcher(),\r\n\t\tsessionWatcher()\r\n\t]);\r\n}","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport { recipeReducer, RecipeState } from \"./reducers/recipeReducer\";\r\nimport { userReducer, UserState } from \"./reducers/userReducer\";\r\nimport rootSaga from \"./sagas/sagas\";\r\n\r\nexport type AppState = {\r\n\trecipes: RecipeState,\r\n\tusers: UserState\r\n}\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst rootReducer = combineReducers(\r\n\t{\r\n\t\trecipes: recipeReducer,\r\n\t\tusers: userReducer\r\n\t}\r\n);\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n\tapplyMiddleware(sagaMiddleware)\r\n));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport { store };","import React from \"react\";\r\n\r\nimport \"./notification.scss\";\r\n\r\nexport enum MessageType {\r\n\t\"error\",\r\n\t\"message\"\r\n}\r\n\r\nexport type NotificationType = {\r\n\ttype: MessageType,\r\n\tmessage: string\r\n}\r\n\r\ntype NotificationProps = {\r\n\tnotification: NotificationType | null\r\n}\r\n\r\nconst Notification: React.FunctionComponent<NotificationProps> = ({ notification }) => {\r\n\r\n\tconst returnClassName = () => {\r\n\t\treturn notification?.type === MessageType.message ?\r\n\t\t\t\"message\" :\r\n\t\t\t\"error\";\r\n\t};\r\n\tif (notification === null) {\r\n\t\treturn null;\r\n\t}\r\n\treturn (\r\n\t\t<div className={\"notification\"}>\r\n\t\t\t<h1 className={returnClassName()}>{notification.message}</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nexport { Notification };","import { RecipeType } from \"../../services/recipes\";\r\n\r\nexport type PlainAction = {\r\n\ttype: string;\r\n}\r\nexport type ActionWithRecipesPayload = {\r\n\ttype: string,\r\n\tpayload: {\r\n\t\trecipes: RecipeType[]\r\n\t}\r\n}\r\n\r\nexport type ActionWithSearchPayload = {\r\n\ttype: string,\r\n\tpayload: {\r\n\t\tsearchTerms: string,\r\n\t\tmealTypes: string[]\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport const GET_RECIPES = (searchTerms: string, mealTypes: string[]): ActionWithSearchPayload => {\r\n\treturn {\r\n\t\ttype: \"GET_RECIPES\",\r\n\t\tpayload: {\r\n\t\t\tsearchTerms,\r\n\t\t\tmealTypes\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const SET_RECIPES = (recipes: RecipeType[]): ActionWithRecipesPayload => {\r\n\treturn {\r\n\t\ttype: \"SET_RECIPES\",\r\n\t\tpayload: {\r\n\t\t\trecipes\r\n\t\t}\r\n\t};\r\n};\r\nexport const SHOW_NEXT_PAGE = (): PlainAction => {\r\n\treturn {\r\n\t\ttype: \"SHOW_NEXT_PAGE\"\r\n\t};\r\n};\r\nexport const SHOW_PREVIOUS_PAGE = (): PlainAction => {\r\n\treturn {\r\n\t\ttype: \"SHOW_PREVIOUS_PAGE\"\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport const INIT_USER_RECIPES = (recipes: RecipeType[]): ActionWithRecipesPayload => {\r\n\treturn {\r\n\t\ttype: \"INIT_USER_RECIPES\",\r\n\t\tpayload: {\r\n\t\t\trecipes\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const CLEAR_USER_RECIPES = (): PlainAction => {\r\n\treturn {\r\n\t\ttype: \"CLEAR_USER_RECIPES\"\r\n\t};\r\n};\r\n","import { MessageType } from \"../../components/pageElements/notification/Notification\";\r\nimport { CredentialsType } from \"../../utils/auth/generateCredentials\";\r\n\r\nexport type ActionWithUserPayload = {\r\n\ttype: string,\r\n\tpayload: {\r\n\t\tusername: string | null,\r\n\t\tpassword?: string | null\r\n\t}\r\n}\r\nexport type ActionWithCredentialsPayload = {\r\n\ttype: string,\r\n\tpayload: {\r\n\t\tcredentials: CredentialsType\r\n\t}\r\n}\r\n\r\nexport type ActionWithErrorPayload = {\r\n\ttype: string,\r\n\tpayload: {\r\n\t\terror: {\r\n\t\t\ttype: MessageType.error\r\n\t\t\tmessage: string\r\n\t\t}\r\n\t}\r\n}\r\nexport type ActionWithSessionValidationPayload = {\r\n\ttype: string,\r\n\tpayload: {\r\n\t\tloggedUser: string | null,\r\n\t\tsessionExpiry: number\r\n\t}\r\n}\r\n\r\nexport const SET_USER_DETAILS = (username: string): ActionWithUserPayload => {\r\n\treturn {\r\n\t\ttype: \"SET_USER_DETAILS\",\r\n\t\tpayload: {\r\n\t\t\tusername\r\n\t\t}\r\n\t};\r\n};\r\nexport const CLEAR_USER_DETAILS = (): ActionWithUserPayload => {\r\n\treturn {\r\n\t\ttype: \"SET_USER_DETAILS\",\r\n\t\tpayload: {\r\n\t\t\tusername: null,\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const ATTEMPT_LOGIN = (credentials: CredentialsType): ActionWithCredentialsPayload => {\r\n\treturn {\r\n\t\ttype: \"ATTEMPT_LOGIN\",\r\n\t\tpayload: {\r\n\t\t\tcredentials\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const LOGIN_ERROR = (error: { type: MessageType.error, message: string }): ActionWithErrorPayload => {\r\n\treturn {\r\n\t\ttype: \"LOGIN_ERROR\",\r\n\t\tpayload: {\r\n\t\t\terror\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const VALIDATE_SESSION_DETAILS = (loggedUser: string | null, sessionExpiry: number): ActionWithSessionValidationPayload => {\r\n\treturn {\r\n\t\ttype: \"VALIDATE_SESSION_DETAILS\",\r\n\t\tpayload: {\r\n\t\t\tloggedUser,\r\n\t\t\tsessionExpiry\r\n\t\t}\r\n\t};\r\n};","import type { PlainAction, ActionWithRecipesPayload, ActionWithSearchPayload } from \"./recipeActions\";\r\nexport type { PlainAction, ActionWithRecipesPayload, ActionWithSearchPayload };\r\n\r\nimport { GET_RECIPES, SET_RECIPES, SHOW_NEXT_PAGE, SHOW_PREVIOUS_PAGE, INIT_USER_RECIPES, CLEAR_USER_RECIPES } from \"./recipeActions\";\r\nexport { GET_RECIPES, SET_RECIPES, INIT_USER_RECIPES, CLEAR_USER_RECIPES };\r\n\r\n//for testing\r\nexport const NAVIGATION_ACTIONS = {\r\n\tSHOW_NEXT_PAGE,\r\n\tSHOW_PREVIOUS_PAGE\r\n};\r\n//this isn't working - find a way to have non-any type in reducers.\r\nexport type userReducerActions = ReturnType<typeof SET_USER_DETAILS | typeof CLEAR_USER_DETAILS | typeof INIT_USER_RECIPES | typeof CLEAR_USER_RECIPES | typeof SAVE_RECIPE | typeof DELETE_RECIPE | typeof LOGIN_ERROR>;\r\n\r\nimport type { ActionWithSavedRecipeIdPayload, ActionWithSavedRecipePayload } from \"./saveAndDeleteActions\";\r\nexport type { ActionWithSavedRecipeIdPayload, ActionWithSavedRecipePayload };\r\n\r\nimport { SAVE_RECIPE, SAVE_USER_RECIPE, DELETE_RECIPE, DELETE_USER_RECIPE } from \"./saveAndDeleteActions\";\r\nexport { SAVE_RECIPE, SAVE_USER_RECIPE, DELETE_RECIPE, DELETE_USER_RECIPE };\r\n\r\n\r\nimport type { ActionWithUserPayload, ActionWithCredentialsPayload, ActionWithErrorPayload, ActionWithSessionValidationPayload } from \"./loginActions\";\r\nexport type { ActionWithUserPayload, ActionWithCredentialsPayload, ActionWithErrorPayload, ActionWithSessionValidationPayload };\r\n\r\nimport { SET_USER_DETAILS, CLEAR_USER_DETAILS, ATTEMPT_LOGIN, LOGIN_ERROR, VALIDATE_SESSION_DETAILS } from \"./loginActions\";\r\nexport { SET_USER_DETAILS, CLEAR_USER_DETAILS, ATTEMPT_LOGIN, LOGIN_ERROR, VALIDATE_SESSION_DETAILS };\r\n\r\nexport type Actions = ReturnType<typeof SET_RECIPES>\r\n\r\n","import { NAVIGATION_ACTIONS } from \"../../../redux/actions/actions\";\r\n\r\nexport const changePage = (direction: string, dispatch: React.Dispatch<any>): void => { //eslint-disable-line\r\n\twindow.scrollTo({\r\n\t\ttop: 0,\r\n\t\tbehavior: \"smooth\"\r\n\t});\r\n\tif (direction === \"next\") {\r\n\t\tdispatch(NAVIGATION_ACTIONS.SHOW_NEXT_PAGE());\r\n\t}\r\n\tif (direction === \"previous\") {\r\n\t\tdispatch(NAVIGATION_ACTIONS.SHOW_PREVIOUS_PAGE());\r\n\t}\r\n\r\n};","import React from \"react\";\r\n\r\nimport \"./button.scss\";\r\n\r\ntype ButtonProps = {\r\n\tlabel: string,\r\n\tonClick: () => void,\r\n\thideOrShow?: () => string\r\n}\r\n\r\nconst Button: React.FunctionComponent<ButtonProps> = ({ label, onClick, hideOrShow }) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button\r\n\t\t\t\tclassName={`button ${hideOrShow && hideOrShow()}`}\r\n\t\t\t\tonClick={onClick}\r\n\t\t\t>\r\n\t\t\t\t{label}\r\n\t\t\t</button>\r\n\t\t</div >\r\n\t);\r\n};\r\n\r\nexport { Button };","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { AppState } from \"../../../redux/store\";\r\nimport { changePage } from \"./changePage\";\r\nimport { Button } from \"../../globals/button/Button\";\r\n\r\nimport \"./pageNavigation.scss\";\r\n\r\nconst PageNavigation: React.FunctionComponent = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst startOfList = useSelector<AppState, boolean>((state) => state.recipes.resultsShown.from === 0);\r\n\tconst endOfList = useSelector<AppState, boolean>((state) => state.recipes.resultsShown.to === 100);\r\n\tconst recipesAreLoaded = useSelector<AppState, boolean>((state) => state.recipes.recipes?.length > 0);\r\n\r\n\treturn (\r\n\t\t<div className=\"page-navigation\">\r\n\t\t\t<Button\r\n\t\t\t\thideOrShow={() => `${endOfList ? \"hide\" : !recipesAreLoaded && \"hide\"}`}\r\n\t\t\t\tonClick={() => changePage(\"next\", dispatch)}\r\n\t\t\t\tlabel={\"next\"}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\thideOrShow={() => { return `${startOfList && \"hide\"}`; }}\r\n\t\t\t\tonClick={() => changePage(\"previous\", dispatch)}\r\n\t\t\t\tlabel={\"previous\"}\r\n\t\t\t/>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport { PageNavigation };","import React from \"react\";\r\n\r\nimport \"./recipeList.scss\";\r\n\r\nconst InfoBar: React.FunctionComponent = () => {\r\n\treturn (\r\n\t\t<div className=\"info\">\r\n\t\t\t<h1>Click the star to save a recipe to your bank</h1>\r\n\t\t\t<p>Due to the limitations of the free api, only the first 100 results found can be scrolled through</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport { InfoBar };\r\n\r\n","import { useState, useCallback } from \"react\";\r\n\r\nconst useTogglable = (initialState: boolean): [boolean, any] => { //eslint-disable-line\r\n\r\n\tconst [state, setState] = useState(initialState);\r\n\tconst toggle = useCallback((): void => setState(!state), [state]);\r\n\r\n\treturn [state, toggle];\r\n};\r\nexport { useTogglable };","import React from \"react\";\r\n\r\ninterface IngredientListProps {\r\n\tingredients: string[]\r\n}\r\n\r\nconst IngredientList: React.FunctionComponent<IngredientListProps> = ({ ingredients }) => {\r\n\treturn (\r\n\t\t<ul className=\"ingredient-list\">\r\n\t\t\t{\r\n\t\t\t\tingredients.map(ingredient => {\r\n\t\t\t\t\treturn (<li key={ingredient}>{ingredient}</li>);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport { IngredientList };","import React from \"react\";\r\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\r\n\r\nexport type SaveButtonProps = {\r\n\tonClick: (event: React.MouseEvent) => void,\r\n\tisSaved: boolean\r\n}\r\n\r\nconst SaveButton: React.FunctionComponent<SaveButtonProps> = ({ onClick, isSaved }) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonClick={onClick}\r\n\t\t\tclassName=\"save-button-div\"\r\n\t\t>\r\n\t\t\t{\r\n\t\t\t\tisSaved ?\r\n\t\t\t\t\t<AiFillStar />\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<AiOutlineStar />\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nexport { SaveButton };","import { useState } from \"react\";\r\n\r\nimport { NotificationType } from \"../components/pageElements/notification/Notification\";\r\n\r\nexport const useNotification = (): [\r\n\tNotificationType | null,\r\n\t(notification: NotificationType | null) => void\r\n] => {\r\n\r\n\tconst [value, setValue] = useState<NotificationType | null>(null);\r\n\r\n\tconst setOnTimer = (notification: NotificationType | null) => {\r\n\t\tconsole.log(notification);\r\n\t\tsetValue(notification);\r\n\t\tsetTimeout(() => setValue(null), 5000);\r\n\t};\r\n\r\n\treturn [value, setOnTimer];\r\n};\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { useTogglable } from \"../../../../hooks/useTogglable\";\r\nimport { IngredientList } from \"../IngredientList\";\r\nimport { RecipeType } from \"../../../../services/recipes\";\r\nimport { SaveButton } from \"./SaveButton\";\r\nimport { DELETE_USER_RECIPE, SAVE_USER_RECIPE } from \"../../../../redux/actions/actions\";\r\nimport { AppState } from \"../../../../redux/store\";\r\nimport { MessageType, Notification } from \"../../../pageElements/notification/Notification\";\r\nimport { useNotification } from \"../../../../hooks/useNotification\";\r\n\r\nimport \"./recipe.scss\";\r\n\r\ninterface RecipeProps {\r\n\trecipe: RecipeType\r\n}\r\n\r\nconst Recipe: React.FunctionComponent<RecipeProps> = ({ recipe }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst { id, label, url, img, calories, source, ingredients, servings } = recipe;\r\n\r\n\tconst savedRecipes = useSelector<AppState, RecipeType[]>(state => state.users.recipes);\r\n\tconst currentUser = useSelector<AppState, string | null>(state => state.users.user.username);\r\n\r\n\tconst [isHidden, setIsHidden] = useTogglable(true);\r\n\tconst [recipeIsSaved, toggleIsSaved] = useTogglable(false);\r\n\tconst [notification, setNotification] = useNotification();\r\n\r\n\tuseEffect(() => {\r\n\t\tsavedRecipes.forEach(recipe => {\r\n\t\t\tif (recipe.id === id) {\r\n\t\t\t\ttoggleIsSaved(true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst saveOrDeleteRecipe = (event: React.MouseEvent) => {\r\n\t\tevent.stopPropagation();\r\n\t\tif (!currentUser) {\r\n\t\t\tsetNotification({ type: MessageType.error, message: \"Must be logged in to save recipes!\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (recipeIsSaved) {\r\n\t\t\ttoggleIsSaved();\r\n\t\t\tdispatch(DELETE_USER_RECIPE(id, currentUser));\r\n\t\t\tsetNotification({ type: MessageType.message, message: \"Recipe deleted!\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttoggleIsSaved();\r\n\t\tdispatch(SAVE_USER_RECIPE(recipe, currentUser));\r\n\t\tsetNotification({ type: MessageType.message, message: \"Recipe saved!\" });\r\n\t\treturn;\r\n\t};\r\n\r\n\t//todo -find a way to stop event bubbling when clicking on \"a\" tag - maybe switch to span?\r\n\treturn (\r\n\t\t<section\r\n\t\t\tclassName=\"recipe\"\r\n\t\t\tonClick={setIsHidden}\r\n\t\t>\r\n\t\t\t<h1>{label}</h1>\r\n\t\t\t<Notification notification={notification} />\r\n\t\t\t<SaveButton\r\n\t\t\t\tonClick={saveOrDeleteRecipe}\r\n\t\t\t\tisSaved={recipeIsSaved}\r\n\t\t\t/>\r\n\r\n\t\t\t<div className={`${isHidden && \"hide\"}`}>\r\n\t\t\t\t<IngredientList ingredients={ingredients} />\r\n\t\t\t\t<p>Servings: {servings} </p>\r\n\t\t\t\t<p>Calories per serving: {Math.floor(calories / servings)}</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<img src={img} alt=\"food\"></img>\r\n\t\t\t<div></div>\r\n\t\t\t<a href={url}>{source}</a>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport { Recipe };","import { RecipeType } from \"../../services/recipes\";\r\n\r\nexport type ActionWithSavedRecipeIdPayload = {\r\n\ttype: string,\r\n\tpayload: {\r\n\t\trecipeId: string,\r\n\t\tcurrentUser: string\r\n\t}\r\n}\r\nexport type ActionWithSavedRecipePayload = {\r\n\ttype: string,\r\n\tpayload: {\r\n\t\trecipe: RecipeType,\r\n\t\tcurrentUser: string\r\n\t}\r\n}\r\n\r\nexport const SAVE_USER_RECIPE = (recipe: RecipeType, currentUser: string): ActionWithSavedRecipePayload => {\r\n\treturn {\r\n\t\ttype: \"SAVE_USER_RECIPE\",\r\n\t\tpayload: {\r\n\t\t\trecipe,\r\n\t\t\tcurrentUser\r\n\t\t}\r\n\t};\r\n};\r\nexport const SAVE_RECIPE = (recipe: RecipeType, currentUser: string): ActionWithSavedRecipePayload => {\r\n\treturn {\r\n\t\ttype: \"SAVE_RECIPE\",\r\n\t\tpayload: {\r\n\t\t\trecipe,\r\n\t\t\tcurrentUser\r\n\t\t}\r\n\t};\r\n};\r\nexport const DELETE_USER_RECIPE = (recipeId: string, currentUser: string): ActionWithSavedRecipeIdPayload => {\r\n\treturn {\r\n\t\ttype: \"DELETE_USER_RECIPE\",\r\n\t\tpayload: {\r\n\t\t\trecipeId,\r\n\t\t\tcurrentUser\r\n\t\t}\r\n\t};\r\n};\r\nexport const DELETE_RECIPE = (recipeId: string, currentUser: string): ActionWithSavedRecipeIdPayload => {\r\n\treturn {\r\n\t\ttype: \"DELETE_RECIPE\",\r\n\t\tpayload: {\r\n\t\t\trecipeId,\r\n\t\t\tcurrentUser\r\n\t\t}\r\n\t};\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { AppState } from \"../../../redux/store\";\r\nimport { RecipeType } from \"../../../services/recipes\";\r\nimport { InfoBar } from \"./InfoBar\";\r\nimport { Recipe } from \"./recipe/Recipe\";\r\n\r\nimport \"./recipeList.scss\";\r\n\r\ninterface ResultsShown {\r\n\tfrom: number,\r\n\tto: number\r\n}\r\n\r\nconst RecipeList: React.FunctionComponent = () => {\r\n\r\n\tconst [currentRecipes, setCurrentRecipes] = useState<RecipeType[]>([]);\r\n\r\n\tconst allRecipes = useSelector<AppState, any>((state) => state.recipes.recipes[0]); //eslint-disable-line\r\n\tconst resultsToShow = useSelector<AppState, ResultsShown>((state) => state.recipes.resultsShown);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst recipesToShow = allRecipes?.slice(resultsToShow.from, resultsToShow.to);\r\n\t\tsetCurrentRecipes(recipesToShow);\r\n\t}, [resultsToShow, allRecipes]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<section className=\"recipe-list\">\r\n\t\t\t{\r\n\t\t\t\tcurrentRecipes?.length > 0 &&\r\n\t\t\t\t<InfoBar />\r\n\t\t\t}\r\n\t\t\t<div />\r\n\t\t\t<ul>\r\n\t\t\t\t{\r\n\t\t\t\t\tcurrentRecipes && currentRecipes.map((recipe: RecipeType) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={recipe.id}>\r\n\t\t\t\t\t\t\t\t<Recipe\r\n\t\t\t\t\t\t\t\t\trecipe={recipe}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport { RecipeList };","import { ChangeEvent, useState } from \"react\";\r\n\r\ninterface ReturnElements {\r\n\ttype: string,\r\n\tvalue: string,\r\n\tonChange(event: ChangeEvent<HTMLInputElement>): void\r\n}\r\n\r\nconst useField = (type: string): ReturnElements => {\r\n\tconst [value, setValue] = useState(\"\");\r\n\r\n\tconst onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(event.target.value);\r\n\t};\r\n\r\n\treturn {\r\n\t\ttype,\r\n\t\tvalue,\r\n\t\tonChange\r\n\t};\r\n};\r\n\r\nexport { useField };\r\n","import React, { useState } from \"react\";\r\n\r\ninterface CheckboxProps {\r\n\tlabel: string,\r\n\thandleCheckboxChange(label: string): void\r\n}\r\n\r\nconst Checkbox: React.FunctionComponent<CheckboxProps> = ({ label, handleCheckboxChange }) => {\r\n\tconst [isChecked, setIsChecked] = useState(false);\r\n\tconst toggleCheckboxChange = () => {\r\n\t\tsetIsChecked(!isChecked);\r\n\t\thandleCheckboxChange(label);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"checkbox\">\r\n\t\t\t<label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tvalue={label}\r\n\t\t\t\t\tchecked={isChecked}\r\n\t\t\t\t\tonChange={toggleCheckboxChange}\r\n\t\t\t\t/>\r\n\t\t\t\t{label}\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport { Checkbox };","import React from \"react\";\r\n\r\nimport { Checkbox } from \"./Checkbox\";\r\n\r\ninterface CheckboxArrayProps {\r\n\tcategories: string[],\r\n\thandleCheckboxChange: (label: string) => void,\r\n}\r\n\r\nconst CheckboxArray: React.FunctionComponent<CheckboxArrayProps> = ({ categories, handleCheckboxChange }) => {\r\n\treturn (\r\n\t\t<div className=\"checkbox-array\">\r\n\t\t\t{\r\n\t\t\t\tcategories.map(category => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\tlabel={category}\r\n\t\t\t\t\t\t\thandleCheckboxChange={handleCheckboxChange}\r\n\t\t\t\t\t\t\tkey={category}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport { CheckboxArray };","import React from \"react\";\r\n\r\nimport \"./button.scss\";\r\n\r\ntype InputButtonProps = {\r\n\thideOrShow?: () => string\r\n}\r\n\r\nconst InputButton: React.FunctionComponent<InputButtonProps> = ({ hideOrShow }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tclassName={`login-form-button ${hideOrShow && hideOrShow()}`}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport { InputButton };","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { useField } from \"../../../hooks/useField\";\r\nimport { GET_RECIPES } from \"../../../redux/actions/actions\";\r\nimport { CheckboxArray } from \"../../globals/checkbox/CheckboxArray\";\r\nimport { MEAL_TYPES } from \"../../../constants\";\r\nimport { InputButton } from \"../../globals/button/InputButton\";\r\n\r\nconst SearchForm: React.FunctionComponent = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst searchTerms = useField(\"text\");\r\n\r\n\tconst [checkedMealTypes, setCheckedMealTypes] = useState<Array<string>>([]);\r\n\r\n\tconst handleSearch = async (event: React.FormEvent) => {\r\n\t\tevent.preventDefault();\r\n\t\tdispatch(GET_RECIPES(searchTerms.value, MEAL_TYPES));\r\n\t};\r\n\r\n\tconst handleCheckboxChange = (label: string) => {\r\n\t\tif (checkedMealTypes.includes(label)) {\r\n\t\t\tconst newCheckedMealTypes = checkedMealTypes.filter(type =>\r\n\t\t\t\ttype !== label\r\n\t\t\t);\r\n\t\t\tsetCheckedMealTypes(newCheckedMealTypes);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCheckedMealTypes([...checkedMealTypes, label]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSearch}>\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"search-input\"\r\n\t\t\t\ttype={searchTerms.type}\r\n\t\t\t\tvalue={searchTerms.value}\r\n\t\t\t\tonChange={searchTerms.onChange}\r\n\t\t\t\tplaceholder=\"search recipes\"\r\n\t\t\t/>\r\n\t\t\t<CheckboxArray\r\n\t\t\t\tcategories={MEAL_TYPES}\r\n\t\t\t\thandleCheckboxChange={handleCheckboxChange}\r\n\t\t\t/>\r\n\t\t\t<InputButton />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport { SearchForm };","import React from \"react\";\r\n\r\nconst SearchInfo: React.FunctionComponent = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>Search through over 2.3 million recipes from all over the web!</h3>\r\n\t\t\t<p>Click on a recipe card to see the ingredients and calories!</p>\r\n\t\t\t<p>Click the link on the recipe card to visit the recipe page!</p>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport { SearchInfo };","import React from \"react\";\r\n\r\nimport { SearchForm } from \"./SearchForm\";\r\nimport { SearchInfo } from \"./SearchInfo\";\r\n\r\nimport \"./searchBar.scss\";\r\n\r\nconst SearchBar: React.FunctionComponent = () => {\r\n\r\n\treturn (\r\n\t\t<section className=\"search-bar\">\r\n\t\t\t<SearchInfo />\r\n\t\t\t<SearchForm />\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport { SearchBar };","export default __webpack_public_path__ + \"static/media/loading-icon.ffc3c7e1.gif\";","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { AppState } from \"../../../redux/store\";\r\n\r\nimport loadingIcon from \"../../../assets/loading-icon.gif\";\r\nimport \"./loading.scss\";\r\n\r\nconst Loading: React.FunctionComponent = () => {\r\n\tconst isLoading = useSelector<AppState, boolean>(state => state.recipes.isLoading);\r\n\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<section className=\"loading\">\r\n\t\t\t\t<h1>loading...</h1>\r\n\t\t\t\t<img src={loadingIcon} alt=\"loading\"></img>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nexport { Loading };","import React from \"react\";\r\n\r\nimport { PageNavigation } from \"./pageNavigation/PageNavigation\";\r\nimport { RecipeList } from \"./recipeList/RecipeList\";\r\nimport { SearchBar } from \"./searchBar/SearchBar\";\r\nimport { Loading } from \"../pageElements/loading/Loading\";\r\n\r\nconst Home: React.FunctionComponent = () => {\r\n\treturn (\r\n\t\t<div className=\"home\">\r\n\t\t\t<SearchBar />\r\n\t\t\t<Loading />\r\n\t\t\t<RecipeList />\r\n\t\t\t<PageNavigation />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport { Home };","\r\nconst validators = {\r\n\r\n\tnumberRegex: /\\d/g,\r\n\tspecialRegex: /[\\s~`!@#$£%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?()\\._]/g,  //eslint-disable-line\r\n\r\n\tusernameIsValid(username: string): boolean { return (username.length >= 6); },\r\n\r\n\tpasswordIsValid(password: string): boolean {\r\n\t\treturn (\r\n\t\t\tthis.passwordLength(password) &&\r\n\t\t\tthis.passwordContainsUpper(password) &&\r\n\t\t\tthis.passwordContainsNumber(password) &&\r\n\t\t\tthis.passwordContainsSpecial(password));\r\n\t},\r\n\r\n\tpasswordLength(password: string): boolean { return (password.length >= 6); },\r\n\r\n\tpasswordContainsNumber(password: string): boolean {\r\n\t\treturn this.numberRegex.test(password);\r\n\t},\r\n\r\n\tpasswordContainsSpecial(password: string): boolean {\r\n\t\treturn this.specialRegex.test(password);\r\n\t},\r\n\r\n\tpasswordContainsUpper(password: string): boolean {\r\n\t\tconst characters = password.split(\"\");\r\n\t\tlet upperIsPresent = false;\r\n\r\n\t\tcharacters.forEach(character => {\r\n\t\t\tif (!this.numberRegex.test(character) &&\r\n\t\t\t\t!this.specialRegex.test(character)) {\r\n\r\n\t\t\t\tif (character === character.toUpperCase()) {\r\n\t\t\t\t\tupperIsPresent = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn upperIsPresent;\r\n\t}\r\n};\r\n\r\nexport { validators };","import React, { useEffect } from \"react\";\r\n\r\nimport { validators } from \"./validators/validators\";\r\n\r\nimport \"./detailsValidator.scss\";\r\n\r\ninterface DetailsValidatorProps {\r\n\tusername: string,\r\n\tpassword: string,\r\n\tsetValidDetails: (truth: boolean) => void\r\n}\r\n\r\nconst DetailsValidator: React.FunctionComponent<DetailsValidatorProps> = ({ username, password, setValidDetails }) => {\r\n\r\n\tuseEffect(() => {\r\n\t\tif (validators.usernameIsValid(username) && validators.passwordIsValid(password)) {\r\n\t\t\tsetValidDetails(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetValidDetails(false);\r\n\t}, [username, password]);\r\n\r\n\treturn (\r\n\t\t<div className=\"details-validator\">\r\n\t\t\t<p className={validators.usernameIsValid(username) ? \"satisfied\" : \"unsatisfied\"}>\r\n\t\t\t\tUsername must be at least 6 characters\r\n\t\t\t</p>\r\n\t\t\t<p className={validators.passwordLength(password) ? \"satisfied\" : \"unsatisfied\"}>\r\n\t\t\t\tPassword must be at least 6 characters\r\n\t\t\t</p>\r\n\t\t\t<p className={validators.passwordContainsUpper(password) ? \"satisfied\" : \"unsatisfied\"}>\r\n\t\t\t\tPassword must contain uppercase letter\r\n\t\t\t</p>\r\n\t\t\t<p className={validators.passwordContainsNumber(password) ? \"satisfied\" : \"unsatisfied\"}>\r\n\t\t\t\tPassword must contain a number\r\n\t\t\t</p>\r\n\t\t\t<p className={validators.passwordContainsSpecial(password) ? \"satisfied\" : \"unsatisfied\"}>\r\n\t\t\t\tPassword must contain a special character\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport { DetailsValidator };","import React, { useState } from \"react\";\r\n\r\nimport { useField } from \"../../../hooks/useField\";\r\nimport { DetailsValidator } from \"./DetailsValidator\";\r\nimport { InputButton } from \"../../globals/button/InputButton\";\r\n\r\ninterface UserDetailFormProps {\r\n\theading: string,\r\n\thandleSubmit(event: React.FormEvent<HTMLFormElement>, username: string, password: string): void,\r\n\trequireValidation: boolean\r\n}\r\n\r\nconst UserDetailsForm: React.FunctionComponent<UserDetailFormProps> = ({ heading, handleSubmit, requireValidation }) => {\r\n\r\n\tconst username = useField(\"text\");\r\n\tconst password = useField(\"text\");\r\n\r\n\tconst hideOrShowButton = () => {\r\n\t\tif (!requireValidation || validDetails) {\r\n\t\t\treturn \"show\";\r\n\t\t}\r\n\t\treturn \"hide\";\r\n\t};\r\n\r\n\tconst [validDetails, setValidDetails] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div className=\"user-details-form\">\r\n\r\n\t\t\t<h1>{heading}</h1>\r\n\r\n\t\t\t<form onSubmit={(event) => handleSubmit(event, username.value, password.value)}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={username.value}\r\n\t\t\t\t\tonChange={username.onChange}\r\n\t\t\t\t\tplaceholder=\"username\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tvalue={password.value}\r\n\t\t\t\t\tonChange={password.onChange}\r\n\t\t\t\t\tplaceholder=\"password\"\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"spacer\" />\r\n\t\t\t\t< InputButton hideOrShow={() => hideOrShowButton()} />\r\n\t\t\t</form>\r\n\t\t\t{\r\n\t\t\t\trequireValidation &&\r\n\t\t\t\t<DetailsValidator\r\n\t\t\t\t\tusername={username.value}\r\n\t\t\t\t\tpassword={password.value}\r\n\t\t\t\t\tsetValidDetails={setValidDetails}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport { UserDetailsForm };","\r\n\r\nexport type CredentialsType = {\r\n\tusername: string,\r\n\tpassword: string\r\n}\r\n\r\nexport const generateCredentials = (username: string, password: string): CredentialsType => {\r\n\treturn {\r\n\t\tusername,\r\n\t\tpassword\r\n\t};\r\n};","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { UserDetailsForm } from \"./UserDetailsForm/UserDetailsForm\";\r\nimport { Notification, MessageType } from \"../pageElements/notification/Notification\";\r\nimport { useNotification } from \"../../hooks/useNotification\";\r\nimport { ATTEMPT_LOGIN } from \"../../redux/actions/actions\";\r\nimport { AppState } from \"../../redux/store\";\r\nimport { generateCredentials } from \"../../utils/auth/generateCredentials\";\r\n\r\nconst LoginForm: React.FunctionComponent = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst currentUser = useSelector<AppState, string | null>(state => state.users.user.username);\r\n\tconst loginError = useSelector<AppState, string | null>(state => state.users.loginError.error);\r\n\tconst [notification, setNotification] = useNotification();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tsetNotification({\r\n\t\t\t\ttype: MessageType.message,\r\n\t\t\t\tmessage: `${currentUser} logged in successfully`\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (loginError) {\r\n\t\t\tsetNotification({\r\n\t\t\t\ttype: MessageType.error,\r\n\t\t\t\tmessage: loginError\r\n\t\t\t});\r\n\t\t}\r\n\t}, [currentUser, loginError]);\r\n\r\n\tconst handleLogin = async (event: React.FormEvent<HTMLFormElement>, username: string, password: string) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst credentials = generateCredentials(username, password);\r\n\t\tdispatch(ATTEMPT_LOGIN(credentials));\r\n\r\n\t\treturn;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"login-form\">\r\n\t\t\t<Notification notification={notification} />\r\n\t\t\t<UserDetailsForm\r\n\t\t\t\theading=\"Login\"\r\n\t\t\t\thandleSubmit={handleLogin}\r\n\t\t\t\trequireValidation={false}\r\n\t\t\t/>\r\n\t\t</div>\r\n\r\n\t);\r\n};\r\n\r\nexport { LoginForm };","import axios, { AxiosResponse } from \"axios\";\r\nimport { Credentials } from \"./login\";\r\n\r\nconst baseUrl = \"http://localhost:3001\";\r\n\r\nexport const signUpService = {\r\n\tasync createNewUser(credentials: Credentials): Promise<AxiosResponse> {\r\n\t\tconst request = `${baseUrl}/api/user/signup`;\r\n\t\ttry {\r\n\t\t\tconst response = await axios.post(request, credentials);\r\n\t\t\treturn response;\r\n\t\t} catch (e) {\r\n\t\t\tthrow { e };\r\n\t\t}\r\n\t}\r\n};","import React from \"react\";\r\n\r\nimport { UserDetailsForm } from \"./UserDetailsForm/UserDetailsForm\";\r\nimport { Notification, MessageType } from \"../pageElements/notification/Notification\";\r\nimport { useNotification } from \"../../hooks/useNotification\";\r\nimport { signUpService } from \"../../services/signUp\";\r\nimport { generateCredentials } from \"../../utils/auth/generateCredentials\";\r\n\r\n\r\ninterface SignupFormProps {\r\n\thidden: boolean\r\n}\r\n\r\nconst SignupForm: React.FunctionComponent<SignupFormProps> = ({ hidden }) => {\r\n\r\n\tconst [notification, setNotification] = useNotification();\r\n\r\n\tconst handleSignup = async (\r\n\t\tevent: React.FormEvent<HTMLFormElement>,\r\n\t\tusername: string,\r\n\t\tpassword: string\r\n\t) => {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\r\n\t\t\tconst credentials = generateCredentials(username, password);\r\n\t\t\tconst response = await signUpService.createNewUser(credentials);\r\n\t\t\tsetNotification({ type: MessageType.message, message: `${response.data.username} signed up successfully!` });\r\n\t\t} catch (e) {\r\n\t\t\tsetNotification({ type: MessageType.error, message: `${e.e.response.data.error}` });\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={`sign-up-form ${hidden && \"hide\"}`}>\r\n\t\t\t<Notification notification={notification} />\r\n\t\t\t<p>\r\n\t\t\t\tN.B. This app is designed for demo purposes only - passwords are hashed, but it is STRONGLY recommended not to use existing passwords\r\n\t\t\t</p>\r\n\t\t\t<UserDetailsForm\r\n\t\t\t\theading=\"Signup\"\r\n\t\t\t\thandleSubmit={handleSignup}\r\n\t\t\t\trequireValidation={true}\r\n\t\t\t/>\r\n\t\t</div>\r\n\r\n\t);\r\n};\r\n\r\n\r\nexport { SignupForm };","import React from \"react\";\r\n\r\nimport { useTogglable } from \"../../hooks/useTogglable\";\r\nimport { LoginForm } from \"./LoginForm\";\r\nimport { SignupForm } from \"./SignupForm\";\r\nimport { Button } from \"../globals/button/Button\";\r\n\r\nimport \"./loginPage.scss\";\r\n\r\n\r\n\r\nconst LoginPage: React.FunctionComponent = () => {\r\n\r\n\tconst [hidden, changeHidden] = useTogglable(true);\r\n\r\n\tconst signupButtonText = (): string => hidden ? \"Signup\" : \"Hide Signup\";\r\n\r\n\treturn (\r\n\t\t<section className=\"login\">\r\n\t\t\t<LoginForm />\r\n\t\t\t<div className=\"spacer\" />\r\n\t\t\t<Button\r\n\t\t\t\tonClick={changeHidden}\r\n\t\t\t\tlabel={signupButtonText()}\r\n\t\t\t/>\r\n\t\t\t<SignupForm hidden={hidden} />\r\n\t\t\t<div className=\"spacer\" />\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport { LoginPage };","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppState } from \"../../../redux/store\";\r\n\r\nconst Navbar: React.FunctionComponent = () => {\r\n\r\n\tconst currentUser = useSelector<AppState, string | null>(state => state.users.user.username);\r\n\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to=\"/\">RECIPES</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to=\"/feed\">FEED</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcurrentUser ?\r\n\t\t\t\t\t\t\t<Link to=\"/vault\">{`${currentUser.toUpperCase()}'S VAULT`}</Link>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<Link to=\"/login\">LOGIN</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport { Navbar };","import React from \"react\";\r\n\r\nimport { Navbar } from \"./Navbar\";\r\n\r\nimport \"./header.scss\";\r\n\r\nconst Header: React.FunctionComponent = () => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<h1>goustito</h1>\r\n\t\t\t<Navbar />\r\n\t\t</header>\r\n\t);\r\n};\r\nexport { Header };","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CLEAR_USER_DETAILS } from \"../../redux/actions/loginActions\";\r\nimport { CLEAR_USER_RECIPES } from \"../../redux/actions/recipeActions\";\r\nimport { AppState } from \"../../redux/store\";\r\nimport { RecipeType } from \"../../services/recipes\";\r\nimport { Recipe } from \"../home/recipeList/recipe/Recipe\";\r\nimport { Button } from \"../globals/button/Button\";\r\n\r\nimport \"./userVault.scss\";\r\n\r\n\r\nconst UserVault: React.FunctionComponent = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\r\n\tconst handleLogout = () => {\r\n\t\tlocalStorage.removeItem(\"token-expiry\");\r\n\t\tlocalStorage.removeItem(\"username\");\r\n\t\tdispatch(CLEAR_USER_DETAILS());\r\n\t\tdispatch(CLEAR_USER_RECIPES());\r\n\t\thistory.push(\"/\");\r\n\t};\r\n\r\n\tconst recipes = useSelector<AppState, RecipeType[]>(state => state.users.recipes);\r\n\treturn (\r\n\t\t<section className=\"user-vault\">\r\n\t\t\t<Button\r\n\t\t\t\tonClick={handleLogout}\r\n\t\t\t\tlabel=\"Logout\"\r\n\t\t\t>\r\n\t\t\t</Button>\r\n\t\t\t{\r\n\t\t\t\trecipes.map(recipe => {\r\n\t\t\t\t\treturn <Recipe key={recipe.id} recipe={recipe} />;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport { UserVault };","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Home } from \"./components/home/Home\";\r\nimport { LoginPage } from \"./components/login/LoginPage\";\r\nimport { Header } from \"./components/pageElements/header/Header\";\r\nimport { UserVault } from \"./components/vault/UserVault\";\r\nimport { VALIDATE_SESSION_DETAILS } from \"./redux/actions/actions\";\r\n\r\nimport \"./app.scss\";\r\n\r\n\r\nconst App: React.FunctionComponent = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst loggedUser = window.localStorage.getItem(\"username\");\r\n\t\tconst sessionExpiry = (\r\n\t\t\tNumber(localStorage.getItem(\"token-expiry\"))\r\n\t\t);\r\n\t\tdispatch(VALIDATE_SESSION_DETAILS(loggedUser, sessionExpiry));\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Router>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<div className=\"page-content\">\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t\t<Home />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path=\"/feed\">\r\n\t\t\t\t\t\t\t<h1>Feed</h1>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path=\"/login\">\r\n\t\t\t\t\t\t\t<LoginPage />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path=\"/vault\">\r\n\t\t\t\t\t\t\t<UserVault />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\n\r\nimport App from \"./App\";\r\n\r\nrequire(\"dotenv\").config(); //eslint-disable-line\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}