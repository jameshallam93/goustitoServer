{"version":3,"sources":["redux/reducer.ts","axios/generateRequest.ts","axios/recipes.ts","redux/sagas.ts","redux/store.ts","components/pageElements/notification/Notification.tsx","redux/actions.ts","components/home/pageNavigation/changePage.ts","components/home/pageNavigation/PageNavigation.tsx","components/home/recipeList/InfoBar.tsx","hooks/useTogglable.ts","components/home/recipeList/IngredientList.tsx","components/home/recipeList/Recipe.tsx","components/home/recipeList/RecipeList.tsx","hooks/useField.ts","components/checkbox/Checkbox.tsx","components/checkbox/CheckboxArray.tsx","components/home/searchBar/SearchForm.tsx","components/home/searchBar/SearchInfo.tsx","components/home/searchBar/SearchBar.tsx","assets/loading-icon.gif","components/pageElements/loading/Loading.tsx","components/home/Home.tsx","components/login/UserDetailsForm/validators/validators.ts","components/login/UserDetailsForm/DetailsValidator.tsx","components/login/UserDetailsForm/UserDetailsForm.tsx","hooks/useNotification.ts","axios/login.ts","components/login/LoginForm.tsx","components/login/SignupForm.tsx","components/login/LoginPage.tsx","components/pageElements/header/Navbar.tsx","components/pageElements/header/Header.tsx","App.tsx","index.tsx"],"names":["initialState","recipes","resultsShown","from","to","isLoading","apiVariables","process","generateRequest","searchTerms","mealTypes","searchTermsString","split","length","join","generateSearchTermString","mealTypeString","forEach","type","generateMealTypeString","requestString","recipeService","request","axios","get","response","data","fetchRecipes","recipeWatcher","rootSaga","action","call","payload","put","hits","takeLatest","all","sagaMiddleware","createSagaMiddleware","store","createStore","state","composeWithDevTools","applyMiddleware","run","MessageType","GET_RECIPES","changePage","direction","dispatch","window","scrollTo","top","behavior","PageNavigation","useDispatch","startOfList","useSelector","endOfList","recipesAreLoaded","className","onClick","InfoBar","useTogglable","useState","setState","toggle","useCallback","IngredientList","ingredients","map","ingredient","Recipe","label","url","img","calories","source","servings","isHidden","setIsHidden","Math","floor","src","alt","href","RecipeList","currentRecipes","setCurrentRecipes","allRecipes","resultsToShow","useEffect","recipesToShow","slice","recipe","image","ingredientLines","yield","id","useField","value","setValue","onChange","event","target","Checkbox","handleCheckboxChange","isChecked","setIsChecked","checked","CheckboxArray","categories","category","SearchForm","checkedMealTypes","setCheckedMealTypes","handleSearch","a","preventDefault","onSubmit","placeholder","includes","newCheckedMealTypes","filter","SearchInfo","SearchBar","Loading","loadingIcon","Home","validators","numberRegex","specialRegex","usernameIsValid","username","passwordIsValid","password","this","passwordLength","passwordContainsUpper","passwordContainsNumber","passwordContainsSpecial","characters","upperIsPresent","character","test","toUpperCase","DetailsValidator","setValidDetails","UserDetailsForm","heading","handleSubmit","requireValidation","validDetails","Notification","notification","message","useNotification","console","log","setTimeout","loginService","credentials","post","e","LoginForm","setNotification","handleLogin","user","SignupForm","hidden","LoginPage","changeHidden","signupButtonText","Navbar","Header","App","exact","path","require","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2319a2c1.chunk.js","sourcesContent":["import { Actions } from \"./actions\";\r\n\r\n\r\nexport type RecipeState = {\r\n\trecipes: string[];\r\n\tresultsShown: {\r\n\t\tfrom: number,\r\n\t\tto: number\r\n\t},\r\n\tisLoading: boolean\r\n}\r\n\r\nconst initialState = {\r\n\trecipes: [],\r\n\tresultsShown: {\r\n\t\tfrom: 0,\r\n\t\tto: 10\r\n\t},\r\n\tisLoading: false\r\n};\r\n\r\nconst recipeReducer: any = (state: RecipeState = initialState, action: Actions) => { //eslint-disable-line\r\n\tswitch (action.type) {\r\n\tcase \"GET_RECIPES\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tisLoading: true\r\n\t\t};\r\n\tcase \"SET_RECIPES\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\trecipes: [action.payload],\r\n\t\t\tresultsShown: {\r\n\t\t\t\tfrom: 0,\r\n\t\t\t\tto: 10\r\n\t\t\t},\r\n\t\t\tisLoading: false\r\n\t\t};\r\n\tcase \"ADD_RECIPES\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\trecipes: [\r\n\t\t\t\t...state.recipes,\r\n\t\t\t\taction.payload.recipes\r\n\t\t\t]\r\n\t\t};\r\n\tcase \"SHOW_NEXT_PAGE\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tresultsShown: {\r\n\t\t\t\tfrom: state.resultsShown.from + 10,\r\n\t\t\t\tto: state.resultsShown.to + 10\r\n\t\t\t}\r\n\t\t};\r\n\tcase \"SHOW_PREVIOUS_PAGE\":\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tresultsShown: {\r\n\t\t\t\tfrom: state.resultsShown.from - 10,\r\n\t\t\t\tto: state.resultsShown.to - 10\r\n\t\t\t}\r\n\t\t};\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport { recipeReducer };","const baseUrl = \"https://api.edamam.com/search\";\r\nconst apiVariables = `&app_id=${process.env.REACT_APP_API_ID}&app_key=${process.env.REACT_APP_EDAMAM_API_KEY}&from=0&to=99`;\r\n\r\nconst generateMealTypeString = (mealTypes: string[]): string => {\r\n\r\n\tif (mealTypes.length === 0) {\r\n\t\treturn \"\";\r\n\t}\r\n\tlet mealTypeString = \"\";\r\n\r\n\tmealTypes.forEach(type => {\r\n\t\tmealTypeString = `${mealTypeString}${type}+`;\r\n\t});\r\n\treturn mealTypeString;\r\n};\r\n\r\nconst generateSearchTermString = (searchTerms: string) => {\r\n\tconst split = searchTerms.split(\" \");\r\n\tif (split.length === 1) {\r\n\t\treturn split[0];\r\n\t}\r\n\tconst rejoined = split.join(\"%20\");\r\n\treturn rejoined;\r\n};\r\n\r\nexport const generateRequest = (searchTerms: string, mealTypes: string[]): string => {\r\n\tconst searchTermsString = generateSearchTermString(searchTerms);\r\n\tconst mealTypeString = generateMealTypeString(mealTypes);\r\n\r\n\tlet requestString = \"\";\r\n\r\n\trequestString = `${baseUrl}?q=${searchTermsString}${apiVariables}`;\r\n\r\n\tif (mealTypeString) {\r\n\t\trequestString = `${requestString}&mealType=${mealTypeString}`;\r\n\t}\r\n\treturn requestString;\r\n};","import axios from \"axios\";\r\n\r\nimport { generateRequest } from \"./generateRequest\";\r\n\r\nconst recipeService = {\r\n\r\n\tasync searchByName(searchTerms: string, mealTypes: string[]) { //eslint-disable-line\r\n\t\tconst request = generateRequest(searchTerms, mealTypes);\r\n\t\tconst response = await axios.get(request);\r\n\t\treturn response.data;\r\n\t}\r\n};\r\n\r\nexport { recipeService };","/*eslint-disable */\r\n\r\nimport { put, takeLatest, all, call } from \"redux-saga/effects\";\r\n\r\nimport { recipeService } from \"../axios/recipes\";\r\nimport { ActionWithSearchPayload } from \"./actions\";\r\n\r\nfunction* fetchRecipes(action: ActionWithSearchPayload): Generator<\r\n\tany,\r\n\tany,\r\n\tany\r\n> {\r\n\tconst recipes: any = yield call(recipeService.searchByName, action.payload.searchTerms, action.payload.mealTypes);\r\n\tyield put({ type: \"SET_RECIPES\", payload: recipes.hits });\r\n}\r\n\r\nfunction* recipeWatcher() {\r\n\tyield takeLatest(\"GET_RECIPES\", fetchRecipes);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([\r\n\t\trecipeWatcher(),\r\n\t]);\r\n}","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport { recipeReducer } from \"./reducer\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n\r\nconst store = createStore(recipeReducer, composeWithDevTools(\r\n\tapplyMiddleware(sagaMiddleware)\r\n));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport { store };","import React from \"react\";\r\n\r\nimport \"./notification.scss\";\r\n\r\nexport enum MessageType {\r\n\t\"error\",\r\n\t\"message\"\r\n}\r\n\r\nexport type NotificationType = {\r\n\ttype: MessageType,\r\n\tmessage: string\r\n}\r\n\r\ntype NotificationProps = {\r\n\tnotification: NotificationType | null\r\n}\r\n\r\nconst Notification: React.FunctionComponent<NotificationProps> = ({ notification }) => {\r\n\r\n\tconst returnClassName = () => {\r\n\t\treturn notification?.type === MessageType.message ?\r\n\t\t\t\"message\" :\r\n\t\t\t\"error\";\r\n\t};\r\n\tif (notification === null) {\r\n\t\treturn null;\r\n\t}\r\n\treturn (\r\n\t\t<div className={\"notification\"}>\r\n\t\t\t<h1 className={returnClassName()}>{notification.message}</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nexport { Notification };","\r\nexport type Recipe = {\r\n\tlabel: string,\r\n\turl: string,\r\n}\r\n\r\ntype ActionWithRecipesPayload = {\r\n\ttype: string,\r\n\tpayload: {\r\n\t\trecipes: Recipe[]\r\n\t}\r\n}\r\nexport type ActionWithSearchPayload = {\r\n\ttype: string,\r\n\tpayload: {\r\n\t\tsearchTerms: string,\r\n\t\tmealTypes: string[]\r\n\t}\r\n}\r\n\r\ntype PlainAction = {\r\n\ttype: string;\r\n}\r\n\r\nexport const GET_RECIPES = (searchTerms: string, mealTypes: string[]): ActionWithSearchPayload => {\r\n\treturn {\r\n\t\ttype: \"GET_RECIPES\",\r\n\t\tpayload: {\r\n\t\t\tsearchTerms,\r\n\t\t\tmealTypes\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const SET_RECIPES = (recipes: Recipe[]): ActionWithRecipesPayload => {\r\n\treturn {\r\n\t\ttype: \"SET_RECIPES\",\r\n\t\tpayload: {\r\n\t\t\trecipes\r\n\t\t}\r\n\t};\r\n};\r\nexport const SHOW_NEXT_PAGE = (): PlainAction => {\r\n\treturn {\r\n\t\ttype: \"SHOW_NEXT_PAGE\"\r\n\t};\r\n};\r\nexport const SHOW_PREVIOUS_PAGE = (): PlainAction => {\r\n\treturn {\r\n\t\ttype: \"SHOW_PREVIOUS_PAGE\"\r\n\t};\r\n};\r\n\r\nexport type Actions = ReturnType<typeof SET_RECIPES>\r\n\r\n","import { SHOW_NEXT_PAGE, SHOW_PREVIOUS_PAGE } from \"../../../redux/actions\";\r\n\r\nexport const changePage = (direction: string, dispatch: React.Dispatch<any>): void => { //eslint-disable-line\r\n\tif (direction === \"next\") {\r\n\t\tdispatch(SHOW_NEXT_PAGE());\r\n\t}\r\n\tif (direction === \"previous\") {\r\n\t\tdispatch(SHOW_PREVIOUS_PAGE());\r\n\t}\r\n\twindow.scrollTo({\r\n\t\ttop: 0,\r\n\t\tbehavior: \"smooth\"\r\n\t});\r\n};","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { RecipeState } from \"../../../redux/reducer\";\r\nimport { changePage } from \"./changePage\";\r\nimport \"./pageNavigation.scss\";\r\n\r\nconst PageNavigation: React.FunctionComponent = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst startOfList = useSelector<RecipeState, boolean>((state) => state.resultsShown.from === 0);\r\n\tconst endOfList = useSelector<RecipeState, boolean>((state) => state.resultsShown.to === 100);\r\n\tconst recipesAreLoaded = useSelector<RecipeState, boolean>((state) => state.recipes[0]?.length > 0);\r\n\r\n\treturn (\r\n\t\t<div className=\"page-navigation\">\r\n\t\t\t<button\r\n\t\t\t\tclassName={`${endOfList ? \"hide\" : !recipesAreLoaded && \"hide\"}`}\r\n\t\t\t\tonClick={() => changePage(\"next\", dispatch)}\r\n\t\t\t>\r\n\t\t\t\tNext\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t\tclassName={`${startOfList && \"hide\"}`}\r\n\t\t\t\tonClick={() => changePage(\"previous\", dispatch)}\r\n\t\t\t>\r\n\t\t\t\tPrevious\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport { PageNavigation };","import React from \"react\";\r\n\r\nimport \"./recipeList.scss\";\r\n\r\nconst InfoBar: React.FunctionComponent = () => { //eslint-disable-line\r\n\r\n\treturn (\r\n\r\n\t\t<div className=\"info\">\r\n\t\t\t<h1>Click the star to save a recipe to your bank</h1>\r\n\t\t\t<p>Due to the limitations of the free api, only the first 100 results found can be scrolled through</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport { InfoBar };\r\n\r\n","import { useState, useCallback } from \"react\";\r\n\r\nconst useTogglable = (initialState: boolean): [boolean, any] => { //eslint-disable-line\r\n\r\n\tconst [state, setState] = useState(initialState);\r\n\tconst toggle = useCallback((): void => setState(!state), [state]);\r\n\r\n\treturn [state, toggle];\r\n};\r\nexport { useTogglable };","import React from \"react\";\r\n\r\ninterface IngredientListProps {\r\n\tingredients: string[]\r\n}\r\n\r\nconst IngredientList: React.FunctionComponent<IngredientListProps> = ({ ingredients }) => {\r\n\treturn (\r\n\t\t<ul className=\"ingredient-list\">\r\n\t\t\t{\r\n\t\t\t\tingredients.map(ingredient => {\r\n\t\t\t\t\treturn (<li key={ingredient}>{ingredient}</li>);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport { IngredientList };","import React from \"react\";\r\n\r\nimport { useTogglable } from \"../../../hooks/useTogglable\";\r\nimport { IngredientList } from \"./IngredientList\";\r\n\r\nimport \"./recipe.scss\";\r\n\r\ninterface RecipeProps {\r\n\tlabel: string,\r\n\turl: string,\r\n\timg: string,\r\n\tcalories: number,\r\n\tsource: string,\r\n\tingredients: string[],\r\n\tservings: number\r\n}\r\n\r\nconst Recipe: React.FunctionComponent<RecipeProps> = ({ label, url, img, calories, source, ingredients, servings }) => {\r\n\tconst [isHidden, setIsHidden] = useTogglable(true);\r\n\t//todo -find a way to stop event bubbling when clicking on \"a\" tag - maybe switch to span?\r\n\treturn (\r\n\t\t<section\r\n\t\t\tclassName=\"recipe\"\r\n\t\t\tonClick={setIsHidden}\r\n\t\t>\r\n\t\t\t<h1>{label}</h1>\r\n\t\t\t<div className={`${isHidden && \"hide\"}`}>\r\n\t\t\t\t<IngredientList ingredients={ingredients} />\r\n\t\t\t\t<p>Calories: {Math.floor(calories)}</p>\r\n\t\t\t\t<p>Servings: {servings} </p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<img src={img} alt=\"food\"></img>\r\n\t\t\t<div></div>\r\n\t\t\t<a href={url}>{source}</a>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport { Recipe };","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { RecipeState } from \"../../../redux/reducer\";\r\nimport { InfoBar } from \"./InfoBar\";\r\nimport { Recipe } from \"./Recipe\";\r\n\r\n\r\n\r\nimport \"./recipeList.scss\";\r\ninterface ResultsShown {\r\n\tfrom: number,\r\n\tto: number\r\n}\r\n\r\nconst RecipeList: React.FunctionComponent = () => {\r\n\r\n\tconst [currentRecipes, setCurrentRecipes] = useState([]);\r\n\r\n\tconst allRecipes: any = useSelector<RecipeState>((state) => state.recipes[0]); //eslint-disable-line\r\n\tconst resultsToShow = useSelector<RecipeState, ResultsShown>((state) => state.resultsShown);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst recipesToShow = allRecipes?.slice(resultsToShow.from, resultsToShow.to);\r\n\t\tsetCurrentRecipes(recipesToShow);\r\n\t}, [resultsToShow, allRecipes]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<section className=\"recipe-list\">\r\n\t\t\t{\r\n\t\t\t\tcurrentRecipes?.length > 0 &&\r\n\t\t\t\t<InfoBar />\r\n\t\t\t}\r\n\t\t\t<div />\r\n\t\t\t<ul>\r\n\t\t\t\t{\r\n\t\t\t\t\tcurrentRecipes && currentRecipes.map((recipe: any) => { //eslint-disable-line\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={recipe.recipe.id}>\r\n\t\t\t\t\t\t\t\t<Recipe\r\n\t\t\t\t\t\t\t\t\tlabel={recipe.recipe.label}\r\n\t\t\t\t\t\t\t\t\turl={recipe.recipe.url}\r\n\t\t\t\t\t\t\t\t\timg={recipe.recipe.image}\r\n\t\t\t\t\t\t\t\t\tcalories={recipe.recipe.calories}\r\n\t\t\t\t\t\t\t\t\tsource={recipe.recipe.source}\r\n\t\t\t\t\t\t\t\t\tingredients={recipe.recipe.ingredientLines}\r\n\t\t\t\t\t\t\t\t\tservings={recipe.recipe.yield}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport { RecipeList };","import { ChangeEvent, useState } from \"react\";\r\n\r\ninterface ReturnElements {\r\n\ttype: string,\r\n\tvalue: string,\r\n\tonChange(event: ChangeEvent<HTMLInputElement>): void\r\n}\r\n\r\nconst useField = (type: string): ReturnElements => {\r\n\tconst [value, setValue] = useState(\"\");\r\n\r\n\tconst onChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(event.target.value);\r\n\t};\r\n\r\n\treturn {\r\n\t\ttype,\r\n\t\tvalue,\r\n\t\tonChange\r\n\t};\r\n};\r\n\r\nexport { useField };\r\n","import React, { useState } from \"react\";\r\n\r\ninterface CheckboxProps {\r\n\tlabel: string,\r\n\thandleCheckboxChange(label: string): void\r\n}\r\n\r\nconst Checkbox: React.FunctionComponent<CheckboxProps> = ({ label, handleCheckboxChange }) => {\r\n\tconst [isChecked, setIsChecked] = useState(false);\r\n\tconst toggleCheckboxChange = () => {\r\n\t\tsetIsChecked(!isChecked);\r\n\t\thandleCheckboxChange(label);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"checkbox\">\r\n\t\t\t<label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tvalue={label}\r\n\t\t\t\t\tchecked={isChecked}\r\n\t\t\t\t\tonChange={toggleCheckboxChange}\r\n\t\t\t\t/>\r\n\t\t\t\t{label}\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport { Checkbox };","import React from \"react\";\r\n\r\nimport { Checkbox } from \"./Checkbox\";\r\n\r\ninterface CheckboxArrayProps {\r\n\tcategories: string[],\r\n\thandleCheckboxChange: (label: string) => void,\r\n}\r\n\r\nconst CheckboxArray: React.FunctionComponent<CheckboxArrayProps> = ({ categories, handleCheckboxChange }) => {\r\n\treturn (\r\n\t\t<div className=\"checkbox-array\">\r\n\t\t\t{\r\n\t\t\t\tcategories.map(category => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\tlabel={category}\r\n\t\t\t\t\t\t\thandleCheckboxChange={handleCheckboxChange}\r\n\t\t\t\t\t\t\tkey={category}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport { CheckboxArray };","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { useField } from \"../../../hooks/useField\";\r\nimport { GET_RECIPES } from \"../../../redux/actions\";\r\nimport { CheckboxArray } from \"../../checkbox/CheckboxArray\";\r\n\r\nconst mealTypes = [\"Breakfast\", \"Lunch\", \"Dinner\", \"Snack\"];\r\n\r\nconst SearchForm: React.FunctionComponent = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst searchTerms = useField(\"text\");\r\n\r\n\tconst [checkedMealTypes, setCheckedMealTypes] = useState<Array<string>>([]);\r\n\r\n\tconst handleSearch = async (event: React.FormEvent) => {\r\n\t\tevent.preventDefault();\r\n\t\tdispatch(GET_RECIPES(searchTerms.value, mealTypes));\r\n\t};\r\n\r\n\tconst handleCheckboxChange = (label: string) => {\r\n\t\tif (checkedMealTypes.includes(label)) {\r\n\t\t\tconst newCheckedMealTypes = checkedMealTypes.filter(type =>\r\n\t\t\t\ttype !== label\r\n\t\t\t);\r\n\t\t\tsetCheckedMealTypes(newCheckedMealTypes);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCheckedMealTypes([...checkedMealTypes, label]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSearch}>\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"search-input\"\r\n\t\t\t\ttype={searchTerms.type}\r\n\t\t\t\tvalue={searchTerms.value}\r\n\t\t\t\tonChange={searchTerms.onChange}\r\n\t\t\t\tplaceholder=\"search recipes\"\r\n\t\t\t/>\r\n\t\t\t<CheckboxArray\r\n\t\t\t\tcategories={mealTypes}\r\n\t\t\t\thandleCheckboxChange={handleCheckboxChange}\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tclassName=\"submit-button\"\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport { SearchForm };","import React from \"react\";\r\n\r\nconst SearchInfo: React.FunctionComponent = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>Search through over 2.3 million recipes from all over the web!</h3>\r\n\t\t\t<p>Click on a recipe card to see the ingredients and calories!</p>\r\n\t\t\t<p>Click the link on the recipe card to visit the recipe page!</p>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport { SearchInfo };","import React from \"react\";\r\n\r\nimport { SearchForm } from \"./SearchForm\";\r\nimport { SearchInfo } from \"./SearchInfo\";\r\nimport \"./searchBar.scss\";\r\n\r\n\r\n//todo - create constants file\r\n\r\nconst SearchBar: React.FunctionComponent = () => {\r\n\r\n\treturn (\r\n\t\t<section className=\"search-bar\">\r\n\t\t\t<SearchInfo />\r\n\t\t\t<SearchForm />\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport { SearchBar };","export default __webpack_public_path__ + \"static/media/loading-icon.ffc3c7e1.gif\";","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { RecipeState } from \"../../../redux/reducer\";\r\n\r\nimport loadingIcon from \"../../../assets/loading-icon.gif\";\r\nimport \"./loading.scss\";\r\n\r\nconst Loading: React.FunctionComponent = () => {\r\n\tconst isLoading = useSelector<RecipeState, boolean>(state => state.isLoading);\r\n\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<section className=\"loading\">\r\n\t\t\t\t<h1>loading...</h1>\r\n\t\t\t\t<img src={loadingIcon} alt=\"loading\"></img>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nexport { Loading };","import React from \"react\";\r\n\r\nimport { PageNavigation } from \"./pageNavigation/PageNavigation\";\r\nimport { RecipeList } from \"./recipeList/RecipeList\";\r\nimport { SearchBar } from \"./searchBar/SearchBar\";\r\nimport { Loading } from \"../pageElements/loading/Loading\";\r\n\r\nconst Home: React.FunctionComponent = () => {\r\n\treturn (\r\n\t\t<div className=\"home\">\r\n\t\t\t<SearchBar />\r\n\t\t\t<Loading />\r\n\t\t\t<RecipeList />\r\n\t\t\t<PageNavigation />\r\n\t\t</div>\r\n\t);\r\n};\r\nexport { Home };","\r\nconst validators = {\r\n\r\n\tnumberRegex: /\\d/g,\r\n\tspecialRegex: /[\\s~`!@#$£%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?()\\._]/g,  //eslint-disable-line\r\n\r\n\tusernameIsValid(username: string): boolean { return (username.length >= 6); },\r\n\r\n\tpasswordIsValid(password: string): boolean {\r\n\t\treturn (\r\n\t\t\tthis.passwordLength(password) &&\r\n\t\t\tthis.passwordContainsUpper(password) &&\r\n\t\t\tthis.passwordContainsNumber(password) &&\r\n\t\t\tthis.passwordContainsSpecial(password));\r\n\t},\r\n\r\n\tpasswordLength(password: string): boolean { return (password.length >= 6); },\r\n\r\n\tpasswordContainsUpper(password: string): boolean {\r\n\t\tconst characters = password.split(\"\");\r\n\t\tlet upperIsPresent = false;\r\n\r\n\t\tcharacters.forEach(character => {\r\n\t\t\tif (!this.numberRegex.test(character) &&\r\n\t\t\t\t!this.specialRegex.test(character)) {\r\n\r\n\t\t\t\tif (character === character.toUpperCase()) {\r\n\t\t\t\t\tupperIsPresent = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn upperIsPresent;\r\n\t},\r\n\r\n\tpasswordContainsNumber(password: string): boolean {\r\n\t\treturn this.numberRegex.test(password);\r\n\t},\r\n\tpasswordContainsSpecial(password: string): boolean {\r\n\t\treturn this.specialRegex.test(password);\r\n\t},\r\n\r\n};\r\n\r\nexport { validators };","import React, { useEffect } from \"react\";\r\n\r\nimport { validators } from \"./validators/validators\";\r\n\r\nimport \"./detailsValidator.scss\";\r\n\r\ninterface DetailsValidatorProps {\r\n\tusername: string,\r\n\tpassword: string,\r\n\tsetValidDetails: (truth: boolean) => void\r\n}\r\n\r\nconst DetailsValidator: React.FunctionComponent<DetailsValidatorProps> = ({ username, password, setValidDetails }) => {\r\n\r\n\tuseEffect(() => {\r\n\t\tif (validators.usernameIsValid(username) && validators.passwordIsValid(password)) {\r\n\t\t\tsetValidDetails(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetValidDetails(false);\r\n\t}, [username, password]);\r\n\r\n\treturn (\r\n\t\t<div className=\"details-validator\">\r\n\t\t\t<p className={validators.usernameIsValid(username) ? \"satisfied\" : \"unsatisfied\"}>\r\n\t\t\t\tUsername must be at least 6 characters\r\n\t\t\t</p>\r\n\t\t\t<p className={validators.passwordLength(password) ? \"satisfied\" : \"unsatisfied\"}>\r\n\t\t\t\tPassword must be at least 6 characters\r\n\t\t\t</p>\r\n\t\t\t<p className={validators.passwordContainsUpper(password) ? \"satisfied\" : \"unsatisfied\"}>\r\n\t\t\t\tPassword must contain uppercase letter\r\n\t\t\t</p>\r\n\t\t\t<p className={validators.passwordContainsNumber(password) ? \"satisfied\" : \"unsatisfied\"}>\r\n\t\t\t\tPassword must contain a number\r\n\t\t\t</p>\r\n\t\t\t<p className={validators.passwordContainsSpecial(password) ? \"satisfied\" : \"unsatisfied\"}>\r\n\t\t\t\tPassword must contain a special character\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport { DetailsValidator };","import React, { useState } from \"react\";\r\n\r\nimport { useField } from \"../../../hooks/useField\";\r\nimport { DetailsValidator } from \"./DetailsValidator\";\r\n\r\n\r\ninterface UserDetailFormProps {\r\n\theading: string,\r\n\thandleSubmit(event: React.FormEvent<HTMLFormElement>, username: string, password: string): void,\r\n\trequireValidation: boolean\r\n}\r\n\r\nconst UserDetailsForm: React.FunctionComponent<UserDetailFormProps> = ({ heading, handleSubmit, requireValidation }) => {\r\n\r\n\tconst username = useField(\"text\");\r\n\tconst password = useField(\"text\");\r\n\r\n\tconst hideOrShowButton = () => {\r\n\t\tif (requireValidation) {\r\n\t\t\tif (validDetails) {\r\n\t\t\t\treturn \"show\";\r\n\t\t\t}\r\n\t\t\treturn \"hide\";\r\n\t\t}\r\n\t\treturn \"show\";\r\n\t};\r\n\r\n\tconst [validDetails, setValidDetails] = useState(false);\r\n\r\n\treturn (\r\n\t\t<div className=\"user-details-form\">\r\n\r\n\t\t\t<h1>{heading}</h1>\r\n\r\n\t\t\t<form onSubmit={(event) => handleSubmit(event, username.value, password.value)}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={username.value}\r\n\t\t\t\t\tonChange={username.onChange}\r\n\t\t\t\t\tplaceholder=\"username\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tvalue={password.value}\r\n\t\t\t\t\tonChange={password.onChange}\r\n\t\t\t\t\tplaceholder=\"password\"\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"spacer\" />\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tclassName={`login-form-button ${hideOrShowButton()}`}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t\t{\r\n\t\t\t\trequireValidation &&\r\n\t\t\t\t<DetailsValidator\r\n\t\t\t\t\tusername={username.value}\r\n\t\t\t\t\tpassword={password.value}\r\n\t\t\t\t\tsetValidDetails={setValidDetails}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport { UserDetailsForm };","import { useState } from \"react\";\r\n\r\nimport { NotificationType } from \"../components/pageElements/notification/Notification\";\r\n\r\nexport const useNotification = (): [\r\n\tNotificationType | null,\r\n\t(notification: NotificationType | null) => void\r\n] => {\r\n\r\n\tconst [value, setValue] = useState<NotificationType | null>(null);\r\n\r\n\tconst setOnTimer = (notification: NotificationType | null) => {\r\n\t\tconsole.log(notification);\r\n\t\tsetValue(notification);\r\n\t\tsetTimeout(() => setValue(null), 5000);\r\n\t};\r\n\r\n\treturn [value, setOnTimer];\r\n};\r\n\r\n","import axios from \"axios\";\r\nconst baseUrl = \"http://localhost:3001\";\r\n\r\nexport const loginService = {\r\n\tasync attemptLogin(credentials: any): Promise<any> {\r\n\t\ttry {\r\n\t\t\tconst request = `${baseUrl}/api/login`;\r\n\t\t\tconst response = await axios.post(request, credentials);\r\n\t\t\treturn response;\r\n\t\t} catch (e) {\r\n\t\t\tthrow { e };\r\n\r\n\t\t}\r\n\r\n\t}\r\n};","import React from \"react\";\r\n\r\nimport { UserDetailsForm } from \"./UserDetailsForm/UserDetailsForm\";\r\nimport { Notification, MessageType } from \"../pageElements/notification/Notification\";\r\nimport { useNotification } from \"../../hooks/useNotification\";\r\nimport { loginService } from \"../../axios/login\";\r\n\r\nconst LoginForm: React.FunctionComponent = () => {\r\n\r\n\tconst [notification, setNotification] = useNotification();\r\n\r\n\tconst handleLogin = async (event: React.FormEvent<HTMLFormElement>, username: string, password: string) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst response = await loginService.attemptLogin({\r\n\t\t\tusername,\r\n\t\t\tpassword\r\n\t\t});\r\n\t\tconsole.log(response);\r\n\t\tconst user = response?.data;\r\n\t\tconsole.log(user);\r\n\t\tsetNotification({ type: MessageType.message, message: `${user.username} logged in successfully` });\r\n\t\treturn;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"login-form\">\r\n\t\t\t<Notification notification={notification} />\r\n\t\t\t<UserDetailsForm\r\n\t\t\t\theading=\"Login\"\r\n\t\t\t\thandleSubmit={handleLogin}\r\n\t\t\t\trequireValidation={false}\r\n\t\t\t/>\r\n\t\t</div>\r\n\r\n\t);\r\n};\r\n\r\n\r\nexport { LoginForm };","import React from \"react\";\r\n\r\nimport { UserDetailsForm } from \"./UserDetailsForm/UserDetailsForm\";\r\nimport { Notification, MessageType } from \"../pageElements/notification/Notification\";\r\nimport { useNotification } from \"../../hooks/useNotification\";\r\n\r\ninterface SignupFormProps {\r\n\thidden: boolean\r\n}\r\n\r\nconst SignupForm: React.FunctionComponent<SignupFormProps> = ({ hidden }) => {\r\n\r\n\tconst [notification, setNotification] = useNotification();\r\n\r\n\tconst handleSignup = (event: React.FormEvent<HTMLFormElement>, username: string, password: string) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetNotification({ type: MessageType.message, message: \"test\" });\r\n\t\treturn;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={`sign-up-form ${hidden && \"hide\"}`}>\r\n\t\t\t<Notification notification={notification} />\r\n\t\t\t<p>N.B. This app is designed for demo purposes only - passwords are hashed, but it is STRONGLY recommended not to use existing passwords</p>\r\n\t\t\t<UserDetailsForm\r\n\t\t\t\theading=\"Signup\"\r\n\t\t\t\thandleSubmit={handleSignup}\r\n\t\t\t\trequireValidation={true}\r\n\t\t\t/>\r\n\t\t</div>\r\n\r\n\t);\r\n};\r\n\r\n\r\nexport { SignupForm };","import React from \"react\";\r\n\r\nimport { useTogglable } from \"../../hooks/useTogglable\";\r\nimport { LoginForm } from \"./LoginForm\";\r\nimport { SignupForm } from \"./SignupForm\";\r\n\r\nimport \"./loginPage.scss\";\r\n\r\n\r\nconst LoginPage: React.FunctionComponent = () => {\r\n\r\n\tconst [hidden, changeHidden] = useTogglable(true);\r\n\r\n\tconst signupButtonText = hidden ? \"Signup\" : \"Hide Signup\";\r\n\r\n\treturn (\r\n\t\t<section className=\"login\">\r\n\t\t\t<LoginForm />\r\n\t\t\t<div className=\"spacer\" />\r\n\t\t\t<button onClick={changeHidden}>\r\n\t\t\t\t{signupButtonText}\r\n\t\t\t</button>\r\n\t\t\t<SignupForm hidden={hidden} />\r\n\t\t\t<div className=\"spacer\" />\r\n\t\t</section>\r\n\t);\r\n};\r\nexport { LoginPage };","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar: React.FunctionComponent = () => {\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to=\"/\">RECIPES</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to=\"/feed\">FEED</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to=\"/login\">LOGIN</Link>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport { Navbar };","import React from \"react\";\r\n\r\nimport { Navbar } from \"./Navbar\";\r\n\r\nimport \"./header.scss\";\r\n\r\nconst Header: React.FunctionComponent = () => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<h1>goustito</h1>\r\n\t\t\t<Navbar />\r\n\t\t</header>\r\n\t);\r\n};\r\nexport { Header };","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Home } from \"./components/home/Home\";\r\nimport { LoginPage } from \"./components/login/LoginPage\";\r\nimport { Header } from \"./components/pageElements/header/Header\";\r\n\r\nimport \"./app.scss\";\r\n\r\n\r\nconst App: React.FunctionComponent = () => {\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Router>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<div className=\"page-content\">\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t\t<Home />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path=\"/feed\">\r\n\t\t\t\t\t\t\t<h1>Feed</h1>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path=\"/login\">\r\n\t\t\t\t\t\t\t<LoginPage />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\n\r\nimport App from \"./App\";\r\n\r\nrequire(\"dotenv\").config(); //eslint-disable-line\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}